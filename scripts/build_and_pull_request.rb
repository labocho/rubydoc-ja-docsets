# Based on masutaka/circleci-bundle-update-pr
# https://github.com/masutaka/circleci-bundle-update-pr
#
# Requirements:
#   GITHUB_ACCESS_TOKEN
#   GIT_EMAIL
#   AWS_ACCESS_KEY_ID
#   AWS_SECRET_ACCESS_KEY
#   S3_ENDPOINT (optional)

require "octokit"

module PullRequest
  module_function
  def create_if_needed(git_username: nil, git_email: nil, git_branches: ["master"])
    raise "$GITHUB_ACCESS_TOKEN isn't set" unless ENV['GITHUB_ACCESS_TOKEN']
    raise "$GIT_EMAIL isn't set" unless ENV['GIT_EMAIL']
    now = Time.now
    return unless need?(git_branches)
    repo_full_name = "labocho/rubydoc-ja-docsets"
    revision = File.read(Dir.glob("html/*/REVISION").first).strip
    branch = "update-documents-#{now.strftime('%Y%m%d%H%M%S')}"

    git_username = client.user.login
    git_email = ENV['GIT_EMAIL']

    create_branch(git_username, git_email, branch, now)
    create_pull_request(repo_full_name, branch, now)
  end

  def need?(git_branches)
    return false unless git_branches.include?("master")
    %w(3.0.0 3.1 3.2 3.3).each do |version|
      unless system({"VERSION" => version}, "bundle", "exec", "rake", "release")
        raise "Unable to execute `bundle exec rake release VERSION=#{version}`"
      end
    end
    `git status -sb 2> /dev/null`.include?("tarball")
  end

  def create_branch(git_username, git_email, branch, now)
    system("git config user.name #{git_username}")
    system("git config user.email #{git_email}")
    system("git add tarball")
    system("git commit -m 'update documents at #{now.strftime('%Y-%m-%d %H:%M:%S %Z')}'")
    system("git branch -M #{branch}")
    system("git push origin #{branch}")
  end

  def create_pull_request(repo_full_name, branch, now)
    title = "update documents at #{now.strftime('%Y-%m-%d %H:%M:%S %Z')}"
    body  = "auto generated by [CircleCI of rubydoc-ja-docsets](https://circleci.com/gh/#{repo_full_name})"
    client.create_pull_request(repo_full_name, "master", branch, title, body)
  end

  def client
    Octokit::Client.new(access_token: ENV["GITHUB_ACCESS_TOKEN"])
  end
end

PullRequest.create_if_needed
